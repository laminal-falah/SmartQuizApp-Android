apply plugin: 'com.android.application'

def versionPropsFile = file('version.properties')

android {
    signingConfigs {
        config {
            keyAlias 'keySmartQuizApp'
            keyPassword 'keponian'
            storeFile file('/Users/laminalfalah/AndroidStudioProjects/SmartQuizApp/keystore')
            storePassword 'basengkau'
        }
    }
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    def versionCodeNo
    def versionMajor
    def versionMinor
    def versionPatch
    def versionBuild
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionCodeNo = versionProps['VERSION_CODE'].toInteger()
        versionProps['VERSION_CODE'] = versionCodeNo.toString()
        versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        versionProps['VERSION_MAJOR'] = versionMajor.toString()
        versionMinor = versionProps['VERSION_MINOR'].toInteger()
        versionProps['VERSION_MINOR'] = versionMinor.toString()
        versionPatch = versionProps['VERSION_PATCH'].toInteger()
        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
        versionProps['VERSION_BUILD'] = versionBuild.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

    } else {
        throw new FileNotFoundException("Could not read version.properties")
    }
    bundle {
        density.enableSplit = true
        abi.enableSplit = true
        language.enableSplit = true
    }

    defaultConfig {
        applicationId "com.kukitriplan.smartquizapp.skripsi"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode versionCodeNo
        versionName "${versionMajor}.${versionMinor}.${versionPatch}.build-${versionBuild}"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
        signingConfig signingConfigs.config
    }
    buildTypes {
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"
        }
        release {
            debuggable false
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_version", "${defaultConfig.versionName}"
        }
    }
    /*splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'arm64-v8a', 'armeabi-v7a'
            universalApk false
        }
    }*/

    dexOptions {}
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-annotations:$rootProject.supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    implementation "com.android.support:design:$rootProject.supportLibraryVersion"
    implementation "com.android.support:exifinterface:$rootProject.supportLibraryVersion"
    implementation "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    implementation "com.android.support:customtabs:$rootProject.supportLibraryVersion"
    implementation "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-messaging:17.3.4'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.facebook.android:facebook-android-sdk:4.39.0'
    implementation 'com.facebook.android:facebook-core:4.39.0'
    implementation 'com.facebook.android:facebook-marketing:4.39.0'
    implementation 'com.facebook.android:facebook-login:4.39.0'
    implementation 'com.github.ybq:Android-Spinkit:1.1.0'
    implementation 'com.squareup.picasso:picasso:2.3.2'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.3.0'
    implementation 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'
    implementation 'com.basgeekball:awesome-validation:2.0'
    implementation 'com.github.rubensousa:gravitysnaphelper:1.5'
    implementation 'uk.co.chrisjenx:calligraphy:2.3.0'
    implementation 'me.dm7.barcodescanner:zxing:1.9.8'
}

apply plugin: 'com.google.gms.google-services'